name: Run Code Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ------ Detect Changed Files ------
      - name: Detect Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v44

      # ------ Determine File Types ------
      - name: Determine File Types
        id: detect-language
        run: |
          echo "Checking which files changed..."
          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"
          RUN_C=0
          RUN_CPP=0
          RUN_PYTHON=0
          RUN_JAVA=0

          for FILE in $CHANGED_FILES; do
            case "$FILE" in
              solutions/*.c) RUN_C=1 ;;
              solutions/*.cpp) RUN_CPP=1 ;;
              solutions/*.py) RUN_PYTHON=1 ;;
              solutions/*.java) RUN_JAVA=1 ;;
            esac
          done

          echo "RUN_C=$RUN_C" >> $GITHUB_ENV
          echo "RUN_CPP=$RUN_CPP" >> $GITHUB_ENV
          echo "RUN_PYTHON=$RUN_PYTHON" >> $GITHUB_ENV
          echo "RUN_JAVA=$RUN_JAVA" >> $GITHUB_ENV

      # ------ Install Dependencies ------
      - name: Install Dependencies
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y gcc g++ default-jdk python3 python3-pip
          python3 -m pip install --upgrade pip pytest

      # ------ Compile & Run C Tests ------
      - name: Compile and Run C Tests
        if: env.RUN_C == '1'
        run: |
          echo "Running C Test Cases..."
          if gcc -o tests/test tests/test.c solutions/solution.c -lm; then
            ./tests/test || echo "C Test Case Failed"
          else
            echo "C Compilation Failed"
            exit 1
          fi

      # ------ Compile & Run C++ Tests ------
      - name: Compile and Run C++ Tests
        if: env.RUN_CPP == '1'
        run: |
          echo "Running C++ Test Cases..."
          if g++ -o tests/test tests/test.cpp solutions/solution.cpp -std=c++11; then
            ./tests/test || echo "C++ Test Case Failed"
          else
            echo "C++ Compilation Failed"
            exit 1
          fi

      # ------ Run Python Tests ------
      - name: Run Python Tests
        if: env.RUN_PYTHON == '1'
        run: |
          echo "Running Python Test Cases..."
          export PYTHONUNBUFFERED=1
          export PYTHONPATH=$PWD
          python3 -m unittest discover -s tests -p "test.py" || echo "Python Test Case Failed"

      # ------ Compile & Run Java Tests ------
      - name: Compile and Run Java Tests
        if: env.RUN_JAVA == '1'
        run: |
          echo "Running Java Test Cases..."
          mkdir -p classes
          if javac -d classes solutions/Solution.java tests/Test.java; then
            java -cp classes Test || echo "Java Test Case Failed"
          else
            echo "Java Compilation Failed"
            exit 1
          fi

      # ------ Upload Test Results ------
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results.log
